
General:
--------

- Check what headers/parts should be included by user-mode programs
  (#ifdef KERNEL)
- Check all input data in ioctls/setsockopt for security bugs
- Document functions (with doxygen?)
- Create a libvisdn for channel manipulation functions?
- Define in which contexts all the various functions may be called. For example
  ppp needs ppp_input() to not be called in hard-irq context and we either must
  force all vISDN xmit functions callers to not be in hard-irq context or queue
  frames in visdn-ppp.ko and use a tasklet to pass them to ppp
- What should we do when a frame is bigger than the FIFO size on hardware?

Build system:
-------------

- Avoid libtool to install chan_visdn.a, chan_visdn.la, run ldconfig and
  complain about non-standard directory location
- Conditionally build kfifo!

chan_visdn:
-----------

- Echo canceller produces some strange noise
- When the module fails initialization, forbid calls and report an error
- Record call failures and failure type in order to put an interface offline
  if not working.
- Make call parking feature enabling configurable
- Fix/complete Progress indicators to notify interworking with non-ISDN
- Fix autocompletion in cli commands
- MWI on ISDN phones
- Asterisk's design makes difficult to implement some sort of parameter
  negotiation so it is impossible to know what bearer capabilities are
  accepted by a destination, if it supports overlap dialing and so on...
- User-mode call bumbing
- Complete sequence if the user is sending partial CLI
- When lapd module is removed the poll routine goes in infinite loop with
  DL-RELEASE-CONFIRM return codes
- When the remote party responds RELEASE COMPLETE with "User Busy" cause
  we respond to * "CHANUNAVAIL"
- Rewrite netlink code to use proper macros

libq931:
--------

- ECT (explicit call transfer) (ETS 300 369-1) (367, 368, 369)
- Call bumbing
- Implement Called/Calling party subaddress IE
- Implement Congestion level IE
- Implement Keypad facility IE
- Implement More Data IE (?)
- Implement Network-specific facilities IE
- Implement Repeat Indicator IE
- Implement Segmented Message IE (?)
- Implement Signal IE
- Implement Transit Network Selection IE
- Implement User-User Information IE
- Implement ETS 300 125 Appendix III (Optional basic access deactivation
  procedures)
- Complete decoding of BC, HLC, LLC
- Make libq931 a daemon to which clients can connect.
  Invent a protocol (CAPI-ng :)) to use for such connection.

app_visdn_ppp:
--------------

timer:
------

- Add open/release functions to disable the timer when no users are using it

visdn_core:
-----------

- Use correct _IOR/_IOC/_IOW macros!!!
- Channel bundling
- Allocate a single major number for control devices?
- Reconnection does not work

lapd:
-----

- When the socket on a TE port is bound, do a TEI Verify?
- When the socket on a TE port is closed send a TEI Verify?

- Write the necessary code to support
  MPH-INFORMATION-INDICATION(connected/disconnected)

- When allmulti flag is changed while the interface is UP, Tei Mgmt entities
  are not released/allocated correctly. The interface needs to be put down and
  than up to make it work

- Implement SOCK_RAW sockets (?)

- Implement listen backlog maximum size

- Implement frame acknowledging throught outgoing i-frames instead of specific
  RR

- Add lapd_ptr to struct net_device. Currently we're using atalk_ptr and it is
  safe, since ISDN interfaces will never run AppleTalk, however it is an ugly
  hack and should be fixed.

- Add AF_LAPD to linux/include/linux/socket.h
- Add PF_LAPD to linux/include/linux/socket.h
- Add SOL_LAPD to linux/inclode/linx/socket.h ????

- Add ARPHRD_LAPD to linux/include/linux/if_arp.h
- Add ETH_P_LAPD to linux/include/linux/if_ether.h
- See ioctl-number.txt and mail <mec@shout.net> and register an IOCTL numbers

- The interface role (in the ISDN network) is determined by the IFF_ALLMULTI
  flag, a specific flag would be better.

- Implement ETS 300 125 Appendix III (Optional basic access deactivation
  procedures)

visdn-ec:
---------

- Add LEC disabler tone detection

visdn-netdev:
-------------

- Reallocate channel ID from the beginning instead of incrementing every time

visdn-ppp:
----------

- Reallocate channel ID from the beginning instead of incrementing every time
- There is a race condition between interface creation and SuSE scripts bringing
  the interface up and down

visdn-streamport:
-----------------

- Reallocate channel ID from the beginning instead of incrementing every time
- Fix fifo jitter buffer

hfc-4s:
-------

- Finish PCM bus support (and remove workaround for too big kmalloc)
- Use memcpy_toio
- Reintegrate BERT support
- There may be some race condition between unload an state_change_work

hfc-pci:
-------

- FIX FIFO free calculation and queue handling
- Finish PCM bus support
- Reintegrate E-channel sniffing
- There may be some race condition between unload an state_change_work

hfc-e1:
-------

hfc-usb:
--------

- First received frame is dropped

vgsm:
-----

- Handle hung micros by timing out writes/reads and resetting the board

chan_vgsm:
----------
- Implement network listing command
- Implement CACM, CAMM,  command
- Implement SMS/CB handling
- Implement network survey
- Handle command timeout and recovery
- Hangup and shutdown on * exit
