
General:
--------

- Check what headers/parts should be included by user-mode programs (#ifdef KERNEL)
- Check all input data in ioctls/setsockopt for security bugs
- Document functions (with doxygen?)

Build system:
-------------

- Check if the kernel source tree has been correctly prepared (make/make
  modules_prepare)
- Avoid libtool to install chan_visdn.a, chan_visdn.la, run ldconfig and complain
  about non-standard directory location
- Avoid modpost complaining about undefined symbols in other modules

chan_visdn:
-----------

- Communication errors are badly handled
- Implement groups in visdn.conf
- Fix/complete Progress indicators to notify interworking with non-ISDN
- Close DLCs after defined amount of inactivity
- Fix autocompletion in cli commands
- Implement "allowed_caller_ids" which may eventually replace
  force_inbound_caller_id
- MWI on ISDN phones
- Asterisk's design forbids me to implement some sort of parameter negotiation
  so it is impossible to know what bearer capabilities are accepted by a
  destination, if it supports overlap dialing and so on...
- Call bumbing

libq931:
--------

- Implement: 5.9 User notification procedure
- Restart Procedure is completely untested, test it.
- ECT (explicit call transfer) (ETS 300 369-1) (367, 368, 369)
- Call bumbing

app_visdn_ppp:
--------------

- Handle hangup

timer:
------

-

visdn_core:
-----------

- Channel bundling
- Allocate a single major number for control devices?

lapd:
-----

- Implement point-to-point and static TEIs

- Implement automatic TEI check for TEIs that are presumably unused and could
  be released

- Implement SOCK_RAW sockets (?)

- DL_DATA-REQUEST in AWAITING shoud put the frame in queue

- Lock accesses to TME and make tei atomic_t  (?)

- Implement socket closure after timeout and T203

- Implement listen backlog maximum size

- Implement frame acknowledging throught outgoing i-frames instead of specific RR

- Indagate whether it is possiblle to strictly serialize frames coming from the
  same device (and thus going to the same socket). Currently netif_rx spreads the
  load on per-CPU queues and frames may get analyzed concurrently.

- Check what happens when 64 sockets are open (every dynamic TEIs)

- Should we add incoming interface, interface role and packet_type to ethereal's
  frame?

- Add lapd_ptr to struct net_device. Currently we're using atalk_ptr and it is
  safe, since ISDN interfaces will never run AppleTalk, however it is an ugly
  hack and should be fixed.

- Add AF_LAPD to linux/include/linux/socket.h
- Add PF_LAPD to linux/include/linux/socket.h
- Add SOL_LAPD to linux/inclode/linx/socket.h ????

- Add ARPHRD_LAPD to linux/include/linux/if_arp.h
- Add ETH_P_LAPD to linux/include/linux/if_ether.h
- See ioctl-number.txt and mail <mec@shout.net> and register an IOCTL number

- The interface role (in the ISDN network) is determined by the IFF_ALLMULTI flag.
  - A specific flag would be better.

visdn-netdev:
-------------

visdn-ppp:
----------

- Handle MTU

hfc-4s:
-------

- Finish PCM bus support

hfc-pci:
-------

- Finish PCM bus support

hfc-e1:
-------

- Rewrite using new model

hfc-usb:
--------

- Rewrite using new model
