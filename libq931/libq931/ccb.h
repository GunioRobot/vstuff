/*
 * vISDN DSSS-1/q.931 signalling library
 *
 * Copyright (C) 2004-2005 Daniele Orlandi
 *
 * Authors: Daniele "Vihai" Orlandi <daniele@orlandi.com>
 *
 * This program is free software and may be modified and distributed
 * under the terms and conditions of the GNU General Public License.
 *
 */

#ifndef _LIBQ931_CCB_H
#define _LIBQ931_CCB_H

#include <libq931/list.h>
#include <libq931/call.h>
#include <libq931/ies.h>

enum q931_primitive
{
	Q931_CCB_ALERTING_INDICATION,
	Q931_CCB_CONNECT_INDICATION,
	Q931_CCB_DISCONNECT_INDICATION,
	Q931_CCB_ERROR_INDICATION,
	Q931_CCB_INFO_INDICATION,
	Q931_CCB_MORE_INFO_INDICATION,
	Q931_CCB_NOTIFY_INDICATION,
	Q931_CCB_PROCEEDING_INDICATION,
	Q931_CCB_PROGRESS_INDICATION,
	Q931_CCB_REJECT_INDICATION,
	Q931_CCB_RELEASE_CONFIRM,
	Q931_CCB_RELEASE_INDICATION,
	Q931_CCB_RESUME_CONFIRM,
	Q931_CCB_RESUME_INDICATION,
	Q931_CCB_SETUP_CONFIRM,
	Q931_CCB_SETUP_COMPLETE_INDICATION,
	Q931_CCB_SETUP_INDICATION,
	Q931_CCB_STATUS_INDICATION,
	Q931_CCB_SUSPEND_CONFIRM,
	Q931_CCB_SUSPEND_INDICATION,
	Q931_CCB_TIMEOUT_INDICATION,
	Q931_CCB_TIMEOUT_MANAGEMENT_INDICATION,
	Q931_CCB_STATUS_MANAGEMENT_INDICATION,
	Q931_CCB_MANAGEMENT_RESTART_CONFIRM,
	Q931_CCB_CONNECT_CHANNEL,
	Q931_CCB_DISCONNECT_CHANNEL,
	Q931_CCB_START_TONE,
	Q931_CCB_STOP_TONE,

	Q931_CCB_ALERTING_REQUEST,
	Q931_CCB_DISCONNECT_REQUEST,
	Q931_CCB_INFO_REQUEST,
	Q931_CCB_MORE_INFO_REQUEST,
	Q931_CCB_NOTIFY_REQUEST,
	Q931_CCB_PROCEEDING_REQUEST,
	Q931_CCB_PROGRESS_REQUEST,
	Q931_CCB_REJECT_REQUEST,
	Q931_CCB_RELEASE_REQUEST,
	Q931_CCB_RESUME_REQUEST,
	Q931_CCB_RESUME_REJECT_REQUEST,
	Q931_CCB_RESUME_RESPONSE,
	Q931_CCB_SETUP_COMPLETE_REQUEST,
	Q931_CCB_SETUP_REQUEST,
	Q931_CCB_SETUP_RESPONSE,
	Q931_CCB_STATUS_ENQUIRY_REQUEST,
	Q931_CCB_SUSPEND_REJECT_REQUEST,
	Q931_CCB_SUSPEND_RESPONSE,
	Q931_CCB_SUSPEND_REQUEST,
};

struct q931_ccb_message
{
	struct list_head node;

	enum q931_primitive primitive;

	struct q931_call *call;
	struct q931_ies ies;

	unsigned long par1;
	unsigned long par2;
};

void q931_ccb_dispatch(struct q931_ccb_message *msg);

#endif
